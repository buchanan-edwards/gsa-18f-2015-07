<% include ./common/header.ejs %>
<%
function getFacebookShareLink(recall, fbappid, url) {
	return 'http://www.facebook.com/dialog/feed?' + [
				'app_id=' + fbappid,
				'redirect_uri=' + encodeURIComponent(url + '/popupclose'),
				'display=popup',
				'link=' + encodeURIComponent(getShareLink(recall, url)),
				'name=' + encodeURIComponent('Food Recall: ' + recall.recall_number),
				'caption=' + encodeURIComponent((recall.recalling_firm.length < 30 ? recall.recalling_firm : recall.recalling_firm.substr(0, 30) + '...') + ' recalls ' + (recall.product_description.length < 30 ? recall.product_description : recall.product_description.substr(0, 30) + '...')),
				'description=' + encodeURIComponent(recall.reason_for_recall.length < 100 ? recall.reason_for_recall : recall.reason_for_recall.substr(0, 100) + '...'),
				'picture=' + encodeURIComponent('http://canyoufreeze.com/wp-content/uploads/2014/09/brie-cheese.jpg')
			].join('&');
}

function getRecallInitiationDate(recall, moment, format) {
	return moment.unix(recall.recall_initiation_date).format(format || 'MMMM Do, YYYY');
}

function getEmailShareLink(recall, moment) {
	var i,
			len,
			arrRecallingFirm = recall.recalling_firm.split(' '),
			arrProductDescription = recall.product_description.split(' '),
			arrInitiationDate = getRecallInitiationDate(recall, moment, 'MMM Do, YYYY').split(' '),
			arrReasonForRecall = recall.reason_for_recall.split(' '),
			subject = [].concat(arrRecallingFirm, 'recalls', arrProductDescription),
			body = [].concat('On', arrInitiationDate, arrRecallingFirm, 'initiated', 'recall', 'of', arrProductDescription, 'due', 'to', arrReasonForRecall);

	for (i = 0, len = subject.length; i < len; i++) {
		subject[i] = encodeURIComponent(subject[i]);
	}

	for (i = 0, len = body.length; i < len; i++) {
		body[i] = encodeURIComponent(body[i]);
	}

	return 'mailto:?subject=' + subject.join('+') + '&body=' + body.join('+');
}

function getShareLink(recall, url) {
	return url + '/details/' + encodeURIComponent(recall.id);
}

function getRecallStyle(classificationLevel) {
	return ['bg-danger text-danger', 'bg-warning text-warning', 'bg-info text-info'][classificationLevel - 1];
}

function getGravatar(email, size) {
	// MD5 (Message-Digest Algorithm) by WebToolkit
	var MD5 = function (s) {
		function L(k, d) {
			return (k << d) | (k >>> (32 - d))
		}

		function K(G, k) {
			var I, d, F, H, x;
			F = (G & 2147483648);
			H = (k & 2147483648);
			I = (G & 1073741824);
			d = (k & 1073741824);
			x = (G & 1073741823) + (k & 1073741823);
			if (I & d) {
				return (x ^ 2147483648 ^ F ^ H)
			}
			if (I | d) {
				if (x & 1073741824) {
					return (x ^ 3221225472 ^ F ^ H)
				} else {
					return (x ^ 1073741824 ^ F ^ H)
				}
			} else {
				return (x ^ F ^ H)
			}
		}

		function r(d, F, k) {
			return (d & F) | ((~d) & k)
		}

		function q(d, F, k) {
			return (d & k) | (F & (~k))
		}

		function p(d, F, k) {
			return (d ^ F ^ k)
		}

		function n(d, F, k) {
			return (F ^ (d | (~k)))
		}

		function u(G, F, aa, Z, k, H, I) {
			G = K(G, K(K(r(F, aa, Z), k), I));
			return K(L(G, H), F)
		}

		function f(G, F, aa, Z, k, H, I) {
			G = K(G, K(K(q(F, aa, Z), k), I));
			return K(L(G, H), F)
		}

		function D(G, F, aa, Z, k, H, I) {
			G = K(G, K(K(p(F, aa, Z), k), I));
			return K(L(G, H), F)
		}

		function t(G, F, aa, Z, k, H, I) {
			G = K(G, K(K(n(F, aa, Z), k), I));
			return K(L(G, H), F)
		}

		function e(G) {
			var Z;
			var F = G.length;
			var x = F + 8;
			var k = (x - (x % 64)) / 64;
			var I = (k + 1) * 16;
			var aa = Array(I - 1);
			var d = 0;
			var H = 0;
			while (H < F) {
				Z = (H - (H % 4)) / 4;
				d = (H % 4) * 8;
				aa[Z] = (aa[Z] | (G.charCodeAt(H) << d));
				H++
			}
			Z = (H - (H % 4)) / 4;
			d = (H % 4) * 8;
			aa[Z] = aa[Z] | (128 << d);
			aa[I - 2] = F << 3;
			aa[I - 1] = F >>> 29;
			return aa
		}

		function B(x) {
			var k = "", F = "", G, d;
			for (d = 0; d <= 3; d++) {
				G = (x >>> (d * 8)) & 255;
				F = "0" + G.toString(16);
				k = k + F.substr(F.length - 2, 2)
			}
			return k
		}

		function J(k) {
			k = k.replace(/rn/g, "n");
			var d = "";
			for (var F = 0; F < k.length; F++) {
				var x = k.charCodeAt(F);
				if (x < 128) {
					d += String.fromCharCode(x)
				} else {
					if ((x > 127) && (x < 2048)) {
						d += String.fromCharCode((x >> 6) | 192);
						d += String.fromCharCode((x & 63) | 128)
					} else {
						d += String.fromCharCode((x >> 12) | 224);
						d += String.fromCharCode(((x >> 6) & 63) | 128);
						d += String.fromCharCode((x & 63) | 128)
					}
				}
			}
			return d
		}

		var C = Array();
		var P, h, E, v, g, Y, X, W, V;
		var S = 7, Q = 12, N = 17, M = 22;
		var A = 5, z = 9, y = 14, w = 20;
		var o = 4, m = 11, l = 16, j = 23;
		var U = 6, T = 10, R = 15, O = 21;
		s = J(s);
		C = e(s);
		Y = 1732584193;
		X = 4023233417;
		W = 2562383102;
		V = 271733878;
		for (P = 0; P < C.length; P += 16) {
			h = Y;
			E = X;
			v = W;
			g = V;
			Y = u(Y, X, W, V, C[P + 0], S, 3614090360);
			V = u(V, Y, X, W, C[P + 1], Q, 3905402710);
			W = u(W, V, Y, X, C[P + 2], N, 606105819);
			X = u(X, W, V, Y, C[P + 3], M, 3250441966);
			Y = u(Y, X, W, V, C[P + 4], S, 4118548399);
			V = u(V, Y, X, W, C[P + 5], Q, 1200080426);
			W = u(W, V, Y, X, C[P + 6], N, 2821735955);
			X = u(X, W, V, Y, C[P + 7], M, 4249261313);
			Y = u(Y, X, W, V, C[P + 8], S, 1770035416);
			V = u(V, Y, X, W, C[P + 9], Q, 2336552879);
			W = u(W, V, Y, X, C[P + 10], N, 4294925233);
			X = u(X, W, V, Y, C[P + 11], M, 2304563134);
			Y = u(Y, X, W, V, C[P + 12], S, 1804603682);
			V = u(V, Y, X, W, C[P + 13], Q, 4254626195);
			W = u(W, V, Y, X, C[P + 14], N, 2792965006);
			X = u(X, W, V, Y, C[P + 15], M, 1236535329);
			Y = f(Y, X, W, V, C[P + 1], A, 4129170786);
			V = f(V, Y, X, W, C[P + 6], z, 3225465664);
			W = f(W, V, Y, X, C[P + 11], y, 643717713);
			X = f(X, W, V, Y, C[P + 0], w, 3921069994);
			Y = f(Y, X, W, V, C[P + 5], A, 3593408605);
			V = f(V, Y, X, W, C[P + 10], z, 38016083);
			W = f(W, V, Y, X, C[P + 15], y, 3634488961);
			X = f(X, W, V, Y, C[P + 4], w, 3889429448);
			Y = f(Y, X, W, V, C[P + 9], A, 568446438);
			V = f(V, Y, X, W, C[P + 14], z, 3275163606);
			W = f(W, V, Y, X, C[P + 3], y, 4107603335);
			X = f(X, W, V, Y, C[P + 8], w, 1163531501);
			Y = f(Y, X, W, V, C[P + 13], A, 2850285829);
			V = f(V, Y, X, W, C[P + 2], z, 4243563512);
			W = f(W, V, Y, X, C[P + 7], y, 1735328473);
			X = f(X, W, V, Y, C[P + 12], w, 2368359562);
			Y = D(Y, X, W, V, C[P + 5], o, 4294588738);
			V = D(V, Y, X, W, C[P + 8], m, 2272392833);
			W = D(W, V, Y, X, C[P + 11], l, 1839030562);
			X = D(X, W, V, Y, C[P + 14], j, 4259657740);
			Y = D(Y, X, W, V, C[P + 1], o, 2763975236);
			V = D(V, Y, X, W, C[P + 4], m, 1272893353);
			W = D(W, V, Y, X, C[P + 7], l, 4139469664);
			X = D(X, W, V, Y, C[P + 10], j, 3200236656);
			Y = D(Y, X, W, V, C[P + 13], o, 681279174);
			V = D(V, Y, X, W, C[P + 0], m, 3936430074);
			W = D(W, V, Y, X, C[P + 3], l, 3572445317);
			X = D(X, W, V, Y, C[P + 6], j, 76029189);
			Y = D(Y, X, W, V, C[P + 9], o, 3654602809);
			V = D(V, Y, X, W, C[P + 12], m, 3873151461);
			W = D(W, V, Y, X, C[P + 15], l, 530742520);
			X = D(X, W, V, Y, C[P + 2], j, 3299628645);
			Y = t(Y, X, W, V, C[P + 0], U, 4096336452);
			V = t(V, Y, X, W, C[P + 7], T, 1126891415);
			W = t(W, V, Y, X, C[P + 14], R, 2878612391);
			X = t(X, W, V, Y, C[P + 5], O, 4237533241);
			Y = t(Y, X, W, V, C[P + 12], U, 1700485571);
			V = t(V, Y, X, W, C[P + 3], T, 2399980690);
			W = t(W, V, Y, X, C[P + 10], R, 4293915773);
			X = t(X, W, V, Y, C[P + 1], O, 2240044497);
			Y = t(Y, X, W, V, C[P + 8], U, 1873313359);
			V = t(V, Y, X, W, C[P + 15], T, 4264355552);
			W = t(W, V, Y, X, C[P + 6], R, 2734768916);
			X = t(X, W, V, Y, C[P + 13], O, 1309151649);
			Y = t(Y, X, W, V, C[P + 4], U, 4149444226);
			V = t(V, Y, X, W, C[P + 11], T, 3174756917);
			W = t(W, V, Y, X, C[P + 2], R, 718787259);
			X = t(X, W, V, Y, C[P + 9], O, 3951481745);
			Y = K(Y, h);
			X = K(X, E);
			W = K(W, v);
			V = K(V, g)
		}
		var i = B(Y) + B(X) + B(W) + B(V);
		return i.toLowerCase()
	};
	return 'http://www.gravatar.com/avatar/' + MD5(email) + '.jpg?s=' + (size || 80);
}
%>
<% if (recall) { %>
<meta property="og:site_name" content="Total Briecall"/>
<meta property="og:locale" content="en_US"/>
<meta property="fb:app_id" content="<%= brie.fbappid %>"/>
<% if ((url + '/details/' + encodeURIComponent(recall.id)) !== (pageUrl)) { %>
<meta property="og:url" content="<%= url + '/details/' + encodeURIComponent(recall.id) %>"/>
<% } %>
<meta property="og:title" content="<%= recall.product_description %>"/>
<meta property="og:description" content="<%= recall.reason_for_recall %>"/>
<meta property="og:type" content="article"/>
<meta property="og:image" content="http://graphics.myfavnews.com/images/logo-100x100.jpg"/>
<meta property="article:author" content="<%= url %>"/>
<meta property="article:publisher" content="https://open.fda.gov"/>
<style>
	.steps {
		list-style: none;
		counter-reset: li;
		padding-left: 0;
	}

	.steps > li {
		counter-increment: step <%= recall.classificationlevel %>;
		position: relative;
		clear: both;
		padding-left: 110px;
		min-height: 100px;
	}

	.classification-level {
		font-size: 40px;
		position: absolute;
		top: 0;
		left: 0;
		width: 100px;
		height: 100px;
		line-height: 100px;
		text-align: center;
		font-family: 'Times New Roman';
	}
	.classification-level:before {
		content: counter(step, upper-roman);
	}

	.details {
		list-style: none;
		counter-reset: li;
		padding-left: 0;
	}

	#map .leaflet-container,
	#map .leaflet-container .leaflet-clickable {
		cursor: default
	}
</style>
</head>
<body class="bg-void application">
<% include ./common/page-header.ejs %>
<div class="container-flexible">
	<div class="panel panel-default panel-expanded panel-main">
		<div class="panel-body container">
			<ol class="steps">
				<li>
					<div class="classification-level  <%= getRecallStyle(recall.classificationlevel) %>"></div>
					<h3 class="panel-title"><%= recall.product_description %></h3>
					<h4 class="panel-subtitle">
						<a data-toggle="tooltip" data-placement="bottom"
						   title="<%= recall.city + ', ' + recall.state + ', ' + recall.country; %>" href="">
							<%= recall.recalling_firm %>
						</a> &nbsp;&#183;&nbsp;
						<small>
							<%= moment.unix(recall.recall_initiation_date).format('MMMM Do, YYYY') %>
						</small>
					</h4>
					<p class="recall-reason" style="margin-top: 16px;"><%= recall.reason_for_recall %></p>
					<ul class="list-inline clearfix">
						<li class="pull-right">
							<div class="dropdown">
								<span data-toggle="dropdown" rel="tooltip" data-placement="bottom"
									  title="Share recall with others" class="btn btn-link dropdown-toggle"><i
											class="glyphicon glyphicon-share-alt"></i> Share</span>
								<ul class="dropdown-menu dropdown-menu-right" role="menu">
									<li role="presentation">
										<a href="#" data-action="recall-copy"
										   data-text="<%= getShareLink(recall, url) %>" role="menuitem" tabindex="-1">
											<i class="glyphicon glyphicon-link"></i> Copy
										</a>
									</li>
									<li role="presentation">
										<a href="<%= getEmailShareLink(recall, moment) %>" target="_" role="menuitem"
										   tabindex="-1">
											<i class="glyphicon glyphicon-envelope"></i> E-mail
										</a>
									</li>
									<% if (brie.fbappid) { %>
									<li role="presentation">
										<a href="#" data-href="<%= getFacebookShareLink(recall, brie.fbappid, url) %>"
										   onclick="window.open(this.dataset.href, 'FeedDialog', 'width=500,height=300,resizable=yes,scrollbars=yes,toolbar=no,menubar=no,location=no'); return false;"
										   role="menuitem" tabindex="-1">
											<i class="fa fa-facebook-official"></i> Facebook
										</a>
									</li>
									<% } %>
								</ul>
							</div>
						</li>
					</ul>
				</li>
			</ol>
			<h4 class="recall-number"><label><%= recall.recall_number %></label></h4>
			<ul class="details">
				<!-- <li><p class="event-id"><label style="padding-right: 4px;">Event Id:</label><%= recall.event_id %></p></li> -->
				<li><p class="company-location"><label style="padding-right: 4px;">Company
							Location:</label><%= recall.city %>, <%= recall.state %> <%= recall.country %></p></li>
				<li><p class="status"><label style="padding-right: 4px;">Current Status:</label><%= recall.status %></p>
				</li>
				<li><p class="product-quantity"><label style="padding-right: 4px;">Number of Products
							Affect:</label><%= recall.product_quantity %></p></li>
				<li><p class="report-date"><label style="padding-right: 4px;">Report
							Date:</label><%= moment.unix(recall.report_date).format('MMMM Do, YYYY') %></p></li>
				<li><p class="voluntary-mandated"><label style="padding-right: 4px;">Voluntary or
							Mandated:</label><%= recall.voluntary_mandated %></p></li>
				<li><p class="initial-firm-notification"><label style="padding-right: 4px;">Initial Firm
							Notification:</label><%= recall.initial_firm_notification %></p></li>
			</ul>
		</div>
	</div>
	<div class="container">
		<div class="row">
			<div class="col-xs-12 col-sm-6 col-md-8">
				<div class="panel panel-default">
					<div class="panel-heading">
						<h3 class="panel-title">Affected states</h3>
					</div>
					<div class="aspect-box aspect-ratio-2x1 map-container">
						<div id="map" class="aspect-content">
							<!-- map goes here -->
						</div>
					</div>
				</div>
			</div>
			<div class="col-xs-12 col-sm-6 col-md-4">
				<div class="panel panel-default">
					<div class="panel-heading">
						<h3 class="panel-title">Categories</h3>
					</div>
					<div class="panel-body">
						<ol class="allergen-list list-inline list-view text-center <%= recall.categories.length === 0 ? 'empty' : '' %>">
							<% _.each(recall.categories, function (category) { %>
							<li class="allergen">
								<div class="aspect-box">
									<div class="aspect-content">
										<div rel="tooltip" data-placement="bottom"
											 title="<%= category %>" class="preview-holder">
											<img src="/img/foodcategories/<%= category %>.jpg">
										</div>
									</div>
								</div>
							</li>
							<% }); %>
						</ol>
						<div class="list-view-messages">
							<p class="list-view-empty-message">Not categorized.</p>

							<p class="list-view-error-message">Oops, we had trouble retrieving recall categories!</p>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="container">
		<div id="comments-section" class="panel panel-default">
			<header class="panel-heading">
				<h3 class="panel-title">Recall comments</h3>
			</header>
			<div class="panel-body">
				<form class="comment-form">
					<input type="hidden" name="recallnumber" value="<%= recall.recall_number %>"/>
					<input type="hidden" name="location" value="<%= session.preferences.state %>"/>

					<div class="form-group">
						<label for="name">Name</label>
						<input type="text" class="form-control" name="name" placeholder="Name" required>
					</div>
					<div class="form-group">
						<label for="comment">Comment</label>
						<textarea class="form-control" rows="3" name="comment" placeholder="Leave a comment"
								  required></textarea>
					</div>
					<div class="form-group">
						<button type="submit" class="btn btn-primary">Submit</button>
					</div>
				</form>
				<ol id="recall-comments" class="list-view<%= recall.comments.length === 0 ? ' empty' : '' %>">
					<!-- recall cards placeholder -->
					<% _.each(recall.comments, function (comment) { %>
					<%
						comment.name = comment.name || 'User';
						comment.location = comment.location || 'Unknown';
						comment.niceCreated = moment.unix(comment.created).format('MMMM Do, YYYY hh:mma');
						comment.niceFromNow = moment.unix(comment.created).fromNow();
					%>
					<li class="comment-entry media">
						<div class="media-left">
							<img class="media-object" src="<%= getGravatar(comment.name, 40); %>"/>
						</div>
						<div class="media-body">
							<h4 class="media-heading"><span><%= comment.name %></span><small class="text-muted">
								&nbsp;&#183;&nbsp; <%= comment.location %> &nbsp;&#183;&nbsp;
								<span rel="tooltip" data-placement="bottom" title="<%= comment.niceCreated %>"><%= comment.niceFromNow %></span></small>
							</h4>
							<p class="comment-body"><%= comment.comment %></p>
						</div>
					</li>
					<% }); %>
				</ol>
				<div class="list-view-messages">
					<!-- <p class="list-view-loading-message spinner spinner-pulsation spinner-primary">Loading...</p> -->
					<p class="list-view-empty-message">Be the first one to comment!</p>

					<!-- <p class="list-view-error-message">Oops, we had trouble retrieving recent recall comments!</p> -->
				</div>
				<div class="text-center">
					<button type="button" class="btn btn-success hidden" data-action="load-more-comments">
						<i class="glyphicon glyphicon-chevron-down"></i> Load more
					</button>
				</div>
			</div>
		</div>
	</div>
</div>
<% include ./common/page-footer.ejs %>
<div id="recall-link-copy" class="modal fade" tabindex="-1" role="dialog">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
							aria-hidden="true">&times;</span></button>
				<h4 class="modal-title">Recall link</h4>
			</div>
			<div class="modal-body">
				<div class="input-group">
					<span class="input-group-addon"><i class="glyphicon glyphicon-link"></i></span>
					<input type="text" name="recall-link" class="form-control" placeholder="Recall link"
						   readonly="readonly">
				</div>
				<em class="small text-muted">Click to select all text.</em>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
			</div>
		</div>
		<!-- /.modal-content -->
	</div>
	<!-- /.modal-dialog -->
</div>
<!-- /.modal -->
<%
	var appModule = '/js/app-recall',
			pageConfig = {
				recall: recall
			};
%>
<% include ./common/require-application.ejs %>
<% } else { %>
</head>
<body class="bg-void">
<div>
	Error encountered. <%= error.statusCode %> - <%= error.message %>
</div>
<% } %>
</body>
</html>